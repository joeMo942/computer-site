#include<iostream>
#include<fstream>
#include<string>
#include<vector>

using namespace std;

//folder name
#define name_file  "data_siup_loin/"
#define name_file_cart  "data_cart/"
//--------------------------------------------

//The number of names from each category
const int cpusize = 9;
const int Gpusize = 8;
const int ramsize = 8;
const int psusize = 8;
const int casesize = 9;
const int mobosize = 7;
const int storunsize = 7;
//--------------------------------------------

string getusername;
string getadress;
string getmail;
int getBalance;
int balance = 30000;

//functions
void cart();
void total_money();
void menu();
void log_in();
void sign_up();
void cpu();
void Gpu();
void ram();
void psu();
void cases();
void mobo();
void storun();
void delete_cart();
void check_out();
void log_out();
//--------------------------------------------

int main()
{
    system("color 02");
    system("cls");
    //login_and_sing up code
    char n;
    cout << "\n\t\t\t\t----------------------------welcome--------------------------------\n";
    cout << "\n\t\t\t\t\t\t\tpress 1 to SignUp";
    cout << "\n\t\t\t\t\t\t\tpress 2 to LogIn\n";
    cin >> n;
    if (n == '1')
        sign_up();
    else if (n == '2')
        log_in();
    else
    {
        cout << "\t\t\t\t\t\t\tYou didn't choose 1 or 2....\n";
        cout << "\t\t\t\t\t\t\t\tTry again...\n";
        system("pause");
        main();
    }
    //delete the screen contents
    system("cls");
    //--------------------------------------------

    //menu function
    menu();
    //--------------------------------------------

    return 0;
}

void sign_up()
{
    cout << "\n\t\t\t\t------------------------------signup-------------------------------\n\n";
    string mail, username, password, adr;
    cout << "\t\t\t\t\t\t\tEnter your username: ";
    cin >> username;
    cout << "\t\t\t\t\t\t\tEnter your mail: ";
    cin >> mail;
    cout << "\t\t\t\t\t\t\tEnter your adress: ";
    std::cin >> std::ws;
    getline(cin, adr);
    cout << "\t\t\t\t\t\t\tEnter your password: ";
    cin >> password;

    ofstream ofile;
    ofstream obfile;
    string userfile = name_file + username + ".txt";
    string balancefile = name_file + username + "balance" + ".txt";
    ofile.open(userfile);
    ofile << username << endl << mail << endl << adr << endl << password;
    obfile.open(balancefile);
    obfile << balance;
    ofile.close();
    obfile.close();
    cout << "\n\t\t\t\t\t\t   You are successfully registered:)\n";
    cout << "\t\t\t\t\t\t   "; system("pause");
    system("cls");
    log_in();
}

void log_in()
{
    cout << "\n\t\t\t\t------------------------------login--------------------------------\n\n";
    string getpassword, username, password;

    cout << "\t\t\t\t\t\t\tEnter your username: ";
    cin >> username;
    cout << "\t\t\t\t\t\t\tEnter your password: ";
    cin >> password;

    ifstream getdatafile;
    string userfile = name_file + username + ".txt";
    getdatafile.open(userfile);
    if (getdatafile.is_open())
    {
        getline(getdatafile, getusername);
        getline(getdatafile, getmail);
        getline(getdatafile, getadress);
        getline(getdatafile, getpassword);
        if (username == getusername && password == getpassword) {
            cout << "\n\t\t\t\t\t\t   You are successfully logged in:)\n";
            cout << "\t\t\t\t\t\t   "; system("pause");
            getdatafile.close();
        }
        else {
            cout << "\n\t\t\t\t\t\t    Wrong username or password!\n";
            cout << "\t\t\t\t\t\t\t Please try Again.\n";
            log_in();
        }
        cout << endl;

    }
    else
    {
        cout << "\n\t\t\t\t\t\t\t Username not found.\n";
        cout << "\t\t\t\t\t\t\t   please sign up.\n";
        sign_up();
    }
}

void menu()
{
    system("cls");
    int vbalance;
    ifstream viewbalance;
    string balancefile = name_file + getusername + "balance" + ".txt";
    viewbalance.open(balancefile);
    viewbalance >> vbalance;
    viewbalance.close();
    string num;
    cout << "\n\t\t\t\t---------------------------main menu-------------------------------\n";
    cout << "\t\t\t\temail:" << getmail << "\t\t\t\t\t\tbalance:" << vbalance << endl << endl;
    cout << "\t\t\t\t\t\t\t[1]Processor\n";
    cout << "\t\t\t\t\t\t\t[2]Graphics cards\n";
    cout << "\t\t\t\t\t\t\t[3]Memory\n";
    cout << "\t\t\t\t\t\t\t[4]Power supplies\n";
    cout << "\t\t\t\t\t\t\t[5]Cases\n";
    cout << "\t\t\t\t\t\t\t[6]Motherboards\n";
    cout << "\t\t\t\t\t\t\t[7]Storage units\n";
    cout << "\t\t\t\t\t\t\t[8]cart\n";
    cout << "\t\t\t\t\t\t\t[9]log out\n";
    cout << "\t\t\t\t\t\t\t[10]Exit\n\n";
    cout << "\t\t\t\t\t\t\tChoose from the menu: ";
    cin >> num;

    if (num == "8") { cart(); }
    else if (num == "9") { log_out(); }
    else if (num == "1") { cpu(); }
    else if (num == "2") { Gpu(); }
    else if (num == "3") { ram(); }
    else if (num == "4") { psu(); }
    else if (num == "5") { cases(); }
    else if (num == "6") { mobo(); }
    else if (num == "7") { storun(); }
    else if (num == "10") { exit(0); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); menu(); }
}

void cart()
{
    system("cls");
    int vbalance;
    ifstream viewbalance;
    string balancefile = name_file + getusername + "balance" + ".txt";
    viewbalance.open(balancefile);
    viewbalance >> vbalance;
    viewbalance.close();
    cout << "\n\t\t\t\t------------------------------cart---------------------------------\n";
    cout << "\t\t\t\temail:" << getmail << "\t\t\t\t\t\tbalance:" << vbalance << endl << endl;
    ifstream cartread;
    string userfile = name_file_cart + getusername + ".txt";
    cartread.open(userfile, ios::in);
    if (cartread.is_open()) {

        string read_line;
        while (getline(cartread, read_line))
        {
            cout << "\t\t\t\t" << read_line;
            cout << endl;
        }
        total_money();
        cartread.close();
    }
}

int totalmoney = 0;

void total_money()
{
    ifstream viewcartpr;
    string viewcarttotal = name_file_cart + getusername + "pr" + ".txt";
    viewcartpr.open(viewcarttotal);

    //Code to know the number of lines in the file--------
    int count = 0;
    string line;
    ifstream filelines;
    filelines.open(viewcarttotal);
    while (getline(filelines, line))
        count++;
    //-----------------------------------------------------
    vector<int> monet(count); // int monet[count]
    if (viewcartpr.is_open()) {
        for (int i = 0; i < count; i++) {
            viewcartpr >> monet[i];
        }
        int total;
        for (int j = 0; j < count; j++) {
            cout << "\t\t\t\t" << monet[j] << "EGP" << endl;
            total = monet[j];
            totalmoney += total;
        }
        cout << "\t\t\t\tTotal items = " << count;
        cout << "\t\t\t\tTotal money = " << totalmoney << "EGP\n";
        cout << "\t\t\t\t-------------------------------------------------------------------\n";
        char num;
        cout << "\t\t\t\t[1]delete cart\n";
        cout << "\t\t\t\t[2]check out\n";
        cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
        cin >> num;
        switch (num)
        {
        case '1':delete_cart();
        case '2':check_out();
        case '0':menu();
        default: {cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); cart(); }
        }
    }
}

void delete_cart()
{
    totalmoney = 0;
    ofstream cart1;
    ofstream cartprice;
    string urname1 = name_file_cart + getusername + ".txt";
    string urname2 = name_file_cart + getusername + "pr" + ".txt";
    cart1.open(urname1, ofstream::out | ofstream::trunc);
    cartprice.open(urname2, ofstream::out | ofstream::trunc);
    cartprice.close();
    cart1.close();
    cart();
}

int sumfinal = 0;

void check_out()
{
    char c;
    ifstream getbalance;
    string balancefile = name_file + getusername + "balance" + ".txt";
    getbalance.open(balancefile);
    getbalance >> getBalance;
    getbalance.close();

    cout << "\t\t\t\tAdress: " << getadress << endl;
    cout << "\t\t\t\tTotal money: " << totalmoney << endl;
    cout << "\t\t\t\tBalance: " << getBalance << endl;
    cout << "\t\t\t\tyou want to check out[y/n]";
    cin >> c;
    if (c == 'Y' || c == 'y')
    {
        if (getBalance >= totalmoney)
        {
            sumfinal = getBalance - totalmoney;
            getBalance = sumfinal;
            balance = getBalance;
            cout << "\t\t\t\tdone...\n";
            totalmoney = 0;
            ofstream newbala;
            newbala.open(balancefile, ios::trunc);  //balance file line 273
            newbala << getBalance;
            newbala.close();
            system("pause");
            delete_cart();
        }
        else
        {
            cout << "\t\t\t\tyou don't have enough money...\n";
            cout << "\t\t\t\t"; system("pause");
            totalmoney = 0;
            menu();

        }
    }
    else
    {
        menu();
    }
}

void cpu()
{
    system("cls");
    // get data from file-------------------------------
    ifstream dfiledata;
    ifstream pfileprice;
    dfiledata.open("data/cpudata.txt");
    pfileprice.open("data/cpuprice.txt");
    string cpu_name[cpusize];
    int cpu_pr[cpusize];

    for (int n1 = 0; n1 < cpusize; n1++) {
        getline(dfiledata, cpu_name[n1]);
        pfileprice >> cpu_pr[n1];
    }
    //---------------------------------------------------

    //out put to user------------------------------------

    cout << "\n\t\t\t\t---------------------------Processor----------------------------------\n\n";

    for (int n = 0; n < cpusize; n++)
    {
        cout << "\t\t\t\t[" << n + 1 << "]" << cpu_name[n] << "   {" << cpu_pr[n] << " EGP}" << endl;
    }
    cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
    //----------------------------------------------------

    //save Price choices in file--------------------------
    ofstream cartfileprice;
    string dircartpr = name_file_cart + getusername + "pr" + ".txt";
    cartfileprice.open(dircartpr, ios::out | ios::app);
    //----------------------------------------------------

    //save choices in file--------------------------------
    ofstream cartfile;
    string dircart = name_file_cart + getusername + ".txt";
    cartfile.open(dircart, ios::out | ios::app);
    char ch;
    cout << "\t\t\t\tChoose the Processor number: ";
    cin >> ch;
    if (ch == '1' || ch == '2' || ch == '3' || ch == '4' || ch == '5' || ch == '6' || ch == '7' || ch == '8' || ch == '9')
    {
        cartfile << cpu_name[ch - '1']; cartfile << endl; cartfileprice << cpu_pr[ch - '1']; cartfileprice << endl; system("cls"); cpu();
    }
    else if (ch == '0') { menu(); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); cpu(); }
    //----------------------------------------------------

    //close files-----------------------------------------
    cartfile.close();
    dfiledata.close();
    pfileprice.close();
    cartfileprice.close();
    //----------------------------------------------------
}

void Gpu()
{
    system("cls");
    // get data from file-------------------------------
    ifstream dfiledata;
    ifstream pfileprice;
    dfiledata.open("data/gpudata.txt");
    pfileprice.open("data/gpuprice.txt");
    string gpu_name[Gpusize];
    int gpu_pr[Gpusize];

    for (int n1 = 0; n1 < Gpusize; n1++) {
        getline(dfiledata, gpu_name[n1]);
        pfileprice >> gpu_pr[n1];
    }
    //---------------------------------------------------

    //output data to user------------------------------------

    cout << "\n\t\t\t\t---------------------------Graphics Card----------------------------------\n\n";

    for (int n = 0; n < Gpusize; n++)
    {
        cout << "\t\t\t\t[" << n + 1 << "]" << gpu_name[n] << "   {" << gpu_pr[n] << " EGP}" << endl;
    }
    cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
    //----------------------------------------------------

    //save Price choices in file--------------------------
    ofstream cartfileprice;
    string dircartpr = name_file_cart + getusername + "pr" + ".txt";
    cartfileprice.open(dircartpr, ios::out | ios::app);
    //----------------------------------------------------

    //save choices in file--------------------------------
    ofstream cartfile;
    string dircart = name_file_cart + getusername + ".txt";
    cartfile.open(dircart, ios::out | ios::app);
    char ch;
    cout << "\t\t\t\tChoose the Mother boards number: ";
    cin >> ch;
    if (ch == '1' || ch == '2' || ch == '3' || ch == '4' || ch == '5' || ch == '6' || ch == '7' || ch == '8')
    {
        cartfile << gpu_name[ch - '1']; cartfile << endl; cartfileprice << gpu_pr[ch - '1']; cartfileprice << endl; system("cls"); Gpu();
    }
    else if (ch == '0') { menu(); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); Gpu(); }

    //----------------------------------------------------

    //close files-----------------------------------------
    cartfile.close();
    dfiledata.close();
    pfileprice.close();
    cartfileprice.close();
    //----------------------------------------------------
}

void ram()
{
    system("cls");
    // get data from file-------------------------------
    ifstream dfiledata;
    ifstream pfileprice;
    dfiledata.open("data/ramdata.txt");
    pfileprice.open("data/ramprice.txt");
    string ram_name[ramsize];
    int ram_pr[ramsize];

    for (int n1 = 0; n1 < ramsize; n1++) {
        getline(dfiledata, ram_name[n1]);
        pfileprice >> ram_pr[n1];
    }
    //---------------------------------------------------

    //output to user------------------------------------

    cout << "\n\t\t\t\t---------------------------Memory----------------------------------\n\n";

    for (int n = 0; n < ramsize; n++)
    {
        cout << "\t\t\t\t[" << n + 1 << "]" << ram_name[n] << "   {" << ram_pr[n] << " EGP}" << endl;
    }
    cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
    //----------------------------------------------------

    //save price choices in file--------------------------
    ofstream cartfileprice;
    string dircartpr = name_file_cart + getusername + "pr" + ".txt";
    cartfileprice.open(dircartpr, ios::out | ios::app);
    //----------------------------------------------------

    //save choices in file--------------------------------
    ofstream cartfile;
    string dircart = name_file_cart + getusername + ".txt";
    cartfile.open(dircart, ios::out | ios::app);
    char ch;
    cout << "\t\t\t\tChoose the Memory number: ";
    cin >> ch;
    if (ch == '1' || ch == '2' || ch == '3' || ch == '4' || ch == '5' || ch == '6' || ch == '7' || ch == '8')
    {
        cartfile << ram_name[ch - '1']; cartfile << endl; cartfileprice << ram_pr[ch - '1']; cartfileprice << endl; system("cls"); ram();
    }
    else if (ch == '0') { menu(); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); ram(); }
    //----------------------------------------------------

    //close files-----------------------------------------
    cartfile.close();
    dfiledata.close();
    pfileprice.close();
    cartfileprice.close();
    //----------------------------------------------------
}

void psu()
{
    system("cls");
    // get data from file-------------------------------
    ifstream dfiledata;
    ifstream pfileprice;
    dfiledata.open("data/psudata.txt");
    pfileprice.open("data/psuprice.txt");
    string psu_name[psusize];
    int psu_pr[psusize];

    for (int n1 = 0; n1 < psusize; n1++) {
        getline(dfiledata, psu_name[n1]);
        pfileprice >> psu_pr[n1];
    }
    //---------------------------------------------------

    //output to user------------------------------------

    cout << "\n\t\t\t\t---------------------------Power supplies----------------------------------\n\n";

    for (int n = 0; n < psusize; n++)
    {
        cout << "\t\t\t\t[" << n + 1 << "]" << psu_name[n] << "   {" << psu_pr[n] << " EGP}" << endl;
    }
    cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
    //----------------------------------------------------

    //save Price choices in file--------------------------
    ofstream cartfileprice;
    string dircartpr = name_file_cart + getusername + "pr" + ".txt";
    cartfileprice.open(dircartpr, ios::out | ios::app);
    //----------------------------------------------------

    //save choices in file--------------------------------
    ofstream cartfile;
    string dircart = name_file_cart + getusername + ".txt";
    cartfile.open(dircart, ios::out | ios::app);
    char ch;
    cout << "\t\t\t\tChoose the Power supplie number: ";
    cin >> ch;
    if (ch == '1' || ch == '2' || ch == '3' || ch == '4' || ch == '5' || ch == '6' || ch == '7' || ch == '8')
    {
        cartfile << psu_name[ch - '1']; cartfile << endl; cartfileprice << psu_pr[ch - '1']; cartfileprice << endl; system("cls"); psu();
    }
    else if (ch == '0') { menu(); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); psu(); }
    //----------------------------------------------------

    //close files-----------------------------------------
    cartfile.close();
    dfiledata.close();
    pfileprice.close();
    cartfileprice.close();
    //----------------------------------------------------
}

void cases()
{
    system("cls");
    // get data from file-------------------------------
    ifstream dfiledata;
    ifstream pfileprice;
    dfiledata.open("data/casedata.txt");
    pfileprice.open("data/caseprice.txt");
    string cases_name[casesize];
    int cases_pr[casesize];

    for (int n1 = 0; n1 < casesize; n1++) {
        getline(dfiledata, cases_name[n1]);
        pfileprice >> cases_pr[n1];
    }
    //---------------------------------------------------

    //output to user------------------------------------

    cout << "\n\t\t\t\t---------------------------cases----------------------------------\n\n";

    for (int n = 0; n < casesize; n++)
    {
        cout << "\t\t\t\t[" << n + 1 << "]" << cases_name[n] << "   {" << cases_pr[n] << " EGP}" << endl;
    }
    cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
    //----------------------------------------------------

    //save price choices in file--------------------------
    ofstream cartfileprice;
    string dircartpr = name_file_cart + getusername + "pr" + ".txt";
    cartfileprice.open(dircartpr, ios::out | ios::app);
    //----------------------------------------------------

    //save choices in file--------------------------------
    ofstream cartfile;
    string dircart = name_file_cart + getusername + ".txt";
    cartfile.open(dircart, ios::out | ios::app);
    char ch;
    cout << "\t\t\t\tChoose the case number: ";
    cin >> ch;
    if (ch == '1' || ch == '2' || ch == '3' || ch == '4' || ch == '5' || ch == '6' || ch == '7' || ch == '8' || ch == '9')
    {
        cartfile << cases_name[ch - '1']; cartfile << endl; cartfileprice << cases_pr[ch - '1']; cartfileprice << endl; system("cls"); cases();
    }
    else if (ch == '0') { menu(); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); cases(); }
    //----------------------------------------------------

    //close files-----------------------------------------
    cartfile.close();
    dfiledata.close();
    pfileprice.close();
    cartfileprice.close();
    //----------------------------------------------------

}

void mobo()
{
    system("cls");
    // get data from file-------------------------------
    ifstream dfiledata;
    ifstream pfileprice;
    dfiledata.open("data/motherboarddata.txt");
    pfileprice.open("data/motherboardprice.txt");
    string mobo_name[mobosize];
    int mobo_pr[mobosize];

    for (int n1 = 0; n1 < mobosize; n1++) {
        getline(dfiledata, mobo_name[n1]);
        pfileprice >> mobo_pr[n1];
    }
    //---------------------------------------------------

    //output to user------------------------------------

    cout << "\n\t\t\t\t---------------------------Motherboards----------------------------------\n\n";

    for (int n = 0; n < mobosize; n++)
    {
        cout << "\t\t\t\t[" << n + 1 << "]" << mobo_name[n] << "   {" << mobo_pr[n] << " EGP}" << endl;
    }
    cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
    //----------------------------------------------------

    //save price choices in file--------------------------
    ofstream cartfileprice;
    string dircartpr = name_file_cart + getusername + "pr" + ".txt";
    cartfileprice.open(dircartpr, ios::out | ios::app);
    //----------------------------------------------------

    //save choices in file--------------------------------
    ofstream cartfile;
    string dircart = name_file_cart + getusername + ".txt";
    cartfile.open(dircart, ios::out | ios::app);
    char ch;
    cout << "\t\t\t\tChoose the Motherboard number: ";
    cin >> ch;
    if (ch == '1' || ch == '2' || ch == '3' || ch == '4' || ch == '5' || ch == '6' || ch == '7')
    {
        cartfile << mobo_name[ch - '1']; cartfile << endl; cartfileprice << mobo_pr[ch - '1']; cartfileprice << endl; system("cls"); mobo();
    }
    else if (ch == '0') { menu(); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); mobo(); }
    //----------------------------------------------------

    //close files-----------------------------------------
    cartfile.close();
    dfiledata.close();
    pfileprice.close();
    cartfileprice.close();
    //----------------------------------------------------
}

void storun()
{
    system("cls");
    // get data from file-------------------------------
    ifstream dfiledata;
    ifstream pfileprice;
    dfiledata.open("data/storundata.txt");
    pfileprice.open("data/storunprice.txt");
    string storun_name[storunsize];
    int storun_pr[storunsize];

    for (int n1 = 0; n1 < storunsize; n1++) {
        getline(dfiledata, storun_name[n1]);
        pfileprice >> storun_pr[n1];
    }
    //---------------------------------------------------

    //output to user------------------------------------

    cout << "\n\t\t\t\t---------------------------Storage units----------------------------------\n\n";

    for (int n = 0; n < storunsize; n++)
    {
        cout << "\t\t\t\t[" << n + 1 << "]" << storun_name[n] << "   {" << storun_pr[n] << " EGP}" << endl;
    }
    cout << "\t\t\t\t-->Press [0] to back to main menu<--\n";
    //----------------------------------------------------

    //save price choices in file--------------------------
    ofstream cartfileprice;
    string dircartpr = name_file_cart + getusername + "pr" + ".txt";
    cartfileprice.open(dircartpr, ios::out | ios::app);
    //----------------------------------------------------

    //save choices in file--------------------------------
    ofstream cartfile;
    string dircart = name_file_cart + getusername + ".txt";
    cartfile.open(dircart, ios::out | ios::app);
    char ch;
    cout << "\t\t\t\tChoose the Storage unit number: ";
    cin >> ch;
    if (ch == '1' || ch == '2' || ch == '3' || ch == '4' || ch == '5' || ch == '6' || ch == '7')
    {
        cartfile << storun_name[ch - '1']; cartfile << endl; cartfileprice << storun_pr[ch - '1']; cartfileprice << endl; system("cls"); storun();
    }
    else if (ch == '0') { menu(); }
    else { cout << "\t\t\t\t\tplease choose one of the previous numbers \n "; system("pause"); storun(); }
    //----------------------------------------------------

    //close files-----------------------------------------
    cartfile.close();
    dfiledata.close();
    pfileprice.close();
    cartfileprice.close();
    //----------------------------------------------------
}

void log_out()
{
    main();
}
